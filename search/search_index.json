{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5173\u4e8e \u8fd9\u662fbrook\u7684wiki\uff0c\u5e73\u65f6\u6536\u96c6\u7684\u5185\u5bb9\u4f1a\u5728\u8fd9\u4e2a\u5730\u65b9\u66f4\u65b0 \u5bfc\u822a python \u51fd\u6570","title":"Home"},{"location":"#_1","text":"\u8fd9\u662fbrook\u7684wiki\uff0c\u5e73\u65f6\u6536\u96c6\u7684\u5185\u5bb9\u4f1a\u5728\u8fd9\u4e2a\u5730\u65b9\u66f4\u65b0","title":"\u5173\u4e8e"},{"location":"#_2","text":"python \u51fd\u6570","title":"\u5bfc\u822a"},{"location":"python_function_style/","text":"\u8d44\u6599\u6765\u6e90\uff1a https://github.com/oldratlee/translations/blob/master/a-practical-introduction-to-functional-programming/README.md \u51fd\u6570\u5f0f\u7f16\u7a0b \u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u7279\u8d28\uff1a \u4e0d\u53ef\u53d8\u6570\u636e1\uff08immutable data\uff09\u3001\u4e00\u7b49\u516c\u6c11\u7684\u51fd\u65702\uff08first class function\uff09\u548c\u5c3e\u8c03\u7528\u4f18\u53163\uff08tail call optimisation\uff09\u3002\u8fd9\u4e9b\u662f\u6709\u52a9\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u8bed\u8a00\u7279\u6027\u3002 map\u3001reduce\u3001\u7ba1\u9053\u3001\u9012\u5f52\uff08recursing\uff09\u3001\u67ef\u91cc\u53164\uff08currying\uff09\u4ee5\u53ca\u9ad8\u9636\u51fd\u6570\u7684\u4f7f\u7528\u3002\u8fd9\u4e9b\u662f\u7528\u4e8e\u7f16\u5199\u51fd\u6570\u5f0f\u4ee3\u7801\u7684\u7f16\u7a0b\u6280\u672f\u3002 \u5e76\u884c\u53165\uff08parallelization\uff09\u3001\u60f0\u6027\u6c42\u503c6\uff08lazy evaluation\uff09\u548c\u786e\u5b9a\u60277\uff08determinism\uff09\u3002\u8fd9\u4e9b\u662f\u51fd\u6570\u5f0f\u7a0b\u5e8f\u7684\u4f18\u70b9\u3002 \u6838\u5fc3\u601d\u60f3 \u65e0\u89c6\u8fd9\u4e00\u5207\u3002\u51fd\u6570\u5f0f\u4ee3\u7801\u7684\u6838\u5fc3\u7279\u8d28\u5c31\u4e00\u6761\uff1a \u65e0\u526f\u4f5c\u7528\uff08the absence of side effects\uff09 \u3002\u5373\u4ee3\u7801\u903b\u8f91\u4e0d\u4f9d\u8d56\u4e8e\u5f53\u524d\u51fd\u6570\u4e4b\u5916\u7684\u6570\u636e\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u66f4\u6539\u5f53\u524d\u51fd\u6570\u4e4b\u5916\u7684\u6570\u636e\u3002\u6240\u6709\u5176\u4ed6\u7684\u300e\u51fd\u6570\u5f0f\u300f\u7279\u8d28\u90fd\u53ef\u4ee5\u4ece\u8fd9\u4e00\u6761\u6d3e\u751f\u51fa\u6765\u3002\u5728\u4f60\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u8bf7\u4ee5\u6b64\u4f5c\u4e3a\u6307\u5357\u9488\u3002 \u975e\u51fd\u6570\u5f0f a = 0 def increment(): global a a += 1 \u51fd\u6570\u5f0f def increment(a): return a + 1 f-string val = 'Geeks' print(f {val}for{val} is a portal for {val}. ) name = 'Tushar' age = 23 print(f Hello, My name is {name} and I'm {age} years old. )","title":"\u51fd\u6570\u5f0f"},{"location":"python_function_style/#_1","text":"https://github.com/oldratlee/translations/blob/master/a-practical-introduction-to-functional-programming/README.md","title":"\u8d44\u6599\u6765\u6e90\uff1a"},{"location":"python_function_style/#_2","text":"\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u7279\u8d28\uff1a \u4e0d\u53ef\u53d8\u6570\u636e1\uff08immutable data\uff09\u3001\u4e00\u7b49\u516c\u6c11\u7684\u51fd\u65702\uff08first class function\uff09\u548c\u5c3e\u8c03\u7528\u4f18\u53163\uff08tail call optimisation\uff09\u3002\u8fd9\u4e9b\u662f\u6709\u52a9\u4e8e\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u8bed\u8a00\u7279\u6027\u3002 map\u3001reduce\u3001\u7ba1\u9053\u3001\u9012\u5f52\uff08recursing\uff09\u3001\u67ef\u91cc\u53164\uff08currying\uff09\u4ee5\u53ca\u9ad8\u9636\u51fd\u6570\u7684\u4f7f\u7528\u3002\u8fd9\u4e9b\u662f\u7528\u4e8e\u7f16\u5199\u51fd\u6570\u5f0f\u4ee3\u7801\u7684\u7f16\u7a0b\u6280\u672f\u3002 \u5e76\u884c\u53165\uff08parallelization\uff09\u3001\u60f0\u6027\u6c42\u503c6\uff08lazy evaluation\uff09\u548c\u786e\u5b9a\u60277\uff08determinism\uff09\u3002\u8fd9\u4e9b\u662f\u51fd\u6570\u5f0f\u7a0b\u5e8f\u7684\u4f18\u70b9\u3002 \u6838\u5fc3\u601d\u60f3 \u65e0\u89c6\u8fd9\u4e00\u5207\u3002\u51fd\u6570\u5f0f\u4ee3\u7801\u7684\u6838\u5fc3\u7279\u8d28\u5c31\u4e00\u6761\uff1a \u65e0\u526f\u4f5c\u7528\uff08the absence of side effects\uff09 \u3002\u5373\u4ee3\u7801\u903b\u8f91\u4e0d\u4f9d\u8d56\u4e8e\u5f53\u524d\u51fd\u6570\u4e4b\u5916\u7684\u6570\u636e\uff0c\u5e76\u4e14\u4e5f\u4e0d\u4f1a\u66f4\u6539\u5f53\u524d\u51fd\u6570\u4e4b\u5916\u7684\u6570\u636e\u3002\u6240\u6709\u5176\u4ed6\u7684\u300e\u51fd\u6570\u5f0f\u300f\u7279\u8d28\u90fd\u53ef\u4ee5\u4ece\u8fd9\u4e00\u6761\u6d3e\u751f\u51fa\u6765\u3002\u5728\u4f60\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u8bf7\u4ee5\u6b64\u4f5c\u4e3a\u6307\u5357\u9488\u3002 \u975e\u51fd\u6570\u5f0f a = 0 def increment(): global a a += 1 \u51fd\u6570\u5f0f def increment(a): return a + 1","title":"\u51fd\u6570\u5f0f\u7f16\u7a0b"},{"location":"python_function_style/#f-string","text":"val = 'Geeks' print(f {val}for{val} is a portal for {val}. ) name = 'Tushar' age = 23 print(f Hello, My name is {name} and I'm {age} years old. )","title":"f-string"}]}